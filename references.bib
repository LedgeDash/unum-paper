@misc{aws-step-functions,
	title = {{AWS Step Functions}},
	note = "\url{https://aws.amazon.com/step-functions/}",
	urldate = {1-14-2021},
}

@misc{google-cloud-composer,
	title = {{Google Cloud Composer (GCC)}},
	note = "\url{https://cloud.google.com/composer}",
	urldate = {1-14-2021},
}

@misc{google-workflows,
	title = {{Google Workflows}},
	note = "\url{https://cloud.google.com/workflows}",
	urldate = {1-14-2021},
}

@misc{faas-vs-ruby-on-rails,
	title = {{Moving my serverless project to Ruby on Rails}},
	note = "\url{https://frantic.im/back-to-rails}",
	urldate = {11-14-2020},
}

@misc{aws-lambda-with-s3,
	title = {{Using AWS Lambda with Amazon S3}},
	note = "\url{https://docs.aws.amazon.com/lambda/latest/dg/with-s3-example.html}",
	urldate = {1-14-2021},
}

@misc{aws-lambda-invoke-type,
	title = {{Invoke, AWS Lambda}},
	note = "\url{https://docs.aws.amazon.com/lambda/latest/dg/API_Invoke.html#API_Invoke_RequestParameters}",
	urldate = {1-14-2021},
}

@misc{lambda-billing,
	title = {{AWS Lambda Pricing}},
	note = "\url{https://aws.amazon.com/lambda/pricing/}",
	urldate = {1-14-2021},
}

@misc{gcf-billing,
	title = {{Google Cloud Functions Pricing}},
	note = "\url{https://cloud.google.com/functions/pricing}",
	urldate = {1-14-2021},
}

@misc{cloudguru-async-lambda,
	title = {{Save time and money with AWS Lambda using asynchronous programming}},
	note = "\url{https://acloudguru.com/blog/engineering/save-time-and-money-with-aws-lambda-using-asynchronous-programming}",
	urldate = {1-14-2021},
}

@misc{jeremy-daly-lambda-sync-http,
	title = {{Serverless Tip: Don’t overpay when waiting on remote API calls}},
	note = "\url{https://www.jeremydaly.com/serverless-tip-dont-overpay-when-waiting-on-remote-api-calls/}",
	urldate = {1-14-2021},
}

@misc{sensedeep-async-lambda,
	title = {{Invoke HTTP from AWS Lambda without Waiting}},
	note = "\url{https://www.sensedeep.com/blog/posts/stories/lambda-fast-http.html}",
	urldate = {1-14-2021},
}

@misc{aws-step-functions-map-state,
	title = {{Map State, AWS Step Functions Developer Guide}},
	note = "\url{https://docs.aws.amazon.com/step-functions/latest/dg/amazon-states-language-map-state.html}",
	urldate = {1-14-2021},
}

@misc{aws-step-functions-dynamic-parallelism,
	title = {{AWS Step Functions adds support for dynamic parallelism in workflows}},
	note = "\url{https://aws.amazon.com/about-aws/whats-new/2019/09/aws-step-functions-adds-support-for-dynamic-parallelism-in-workflows/}",
	urldate = {1-14-2021},
}

@misc{aws-step-functions-parallel-state,
	title = {{Parallel State, AWS Step Functions Developer Guide}},
	note = "\url{https://docs.aws.amazon.com/step-functions/latest/dg/amazon-states-language-parallel-state.html}",
	urldate = {1-14-2021},
}

@misc{excamera-handler-code,
	title = {{handler in libmu}},
	note = "\url{https://github.com/excamera/mu/blob/c58443dbf4066f70dd18568bbc72173750013cee/src/lambdaize/libmu/handler.py#L181}",
	urldate = {1-14-2021},
}

@misc{durable-functions,
	title = {{AZure Durable Functions}},
	note = "\url{https://docs.microsoft.com/en-us/azure/azure-functions/durable/durable-functions-overview?tabs=csharp}",
	urldate = {1-14-2021},
}




@inproceedings {gg-atc,
author = {Sadjad Fouladi and Francisco Romero and Dan Iter and Qian Li and Shuvo Chatterjee and Christos Kozyrakis and Matei Zaharia and Keith Winstein},
title = {From Laptop to Lambda: Outsourcing Everyday Jobs to Thousands of Transient Functional Containers},
booktitle = {2019 {USENIX} Annual Technical Conference ({USENIX} {ATC} 19)},
year = {2019},
isbn = {978-1-939133-03-8},
address = {Renton, WA},
pages = {475--488},
url = {https://www.usenix.org/conference/atc19/presentation/fouladi},
publisher = {{USENIX} Association},
month = jul,
}

@inproceedings {excamera,
author = {Sadjad Fouladi and Riad S. Wahby and Brennan Shacklett and Karthikeyan Vasuki Balasubramaniam and William Zeng and Rahul Bhalerao and Anirudh Sivaraman and George Porter and Keith Winstein},
title = {Encoding, Fast and Slow: Low-Latency Video Processing Using Thousands of Tiny Threads},
booktitle = {14th {USENIX} Symposium on Networked Systems Design and Implementation ({NSDI} 17)},
year = {2017},
isbn = {978-1-931971-37-9},
address = {Boston, MA},
pages = {363--376},
url = {https://www.usenix.org/conference/nsdi17/technical-sessions/presentation/fouladi},
publisher = {{USENIX} Association},
month = mar,
}

@article{cloudburst,
author = {Sreekanti, Vikram and Wu, Chenggang and Lin, Xiayue Charles and Schleier-Smith, Johann and Gonzalez, Joseph E. and Hellerstein, Joseph M. and Tumanov, Alexey},
title = {Cloudburst: Stateful Functions-as-a-Service},
year = {2020},
issue_date = {August 2020},
publisher = {VLDB Endowment},
volume = {13},
number = {12},
issn = {2150-8097},
url = {https://doi.org/10.14778/3407790.3407836},
doi = {10.14778/3407790.3407836},
journal = {Proc. VLDB Endow.},
month = jul,
pages = {2438–2452},
numpages = {15}
}

@inproceedings{triggerflow,
author = {L\'{o}pez, Pedro Garc\'{\i}a and Arjona, Aitor and Samp\'{e}, Josep and Slominski, Aleksander and Villard, Lionel},
title = {Triggerflow: Trigger-Based Orchestration of Serverless Workflows},
year = {2020},
isbn = {9781450380287},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3401025.3401731},
doi = {10.1145/3401025.3401731},
abstract = {As more applications are being moved to the Cloud thanks to serverless computing,
it is increasingly necessary to support native life cycle execution of those applications
in the data center.But existing systems either focus on short-running workflows (like
IBM Composer or Amazon Express Workflows) or impose considerable overheads for synchronizing
massively parallel jobs (Azure Durable Functions, Amazon Step Functions, Google Cloud
Composer). None of them are open systems enabling extensible interception and optimization
of custom workflows.We present Triggerflow: an extensible Trigger-based Orchestration
architecture for serverless workflows built on top of Knative Eventing and Kubernetes
technologies. We demonstrate that Triggerflow is a novel serverless building block
capable of constructing different reactive schedulers (State Machines, Directed Acyclic
Graphs, Workflow as code). We also validate that it can support high-volume event
processing workloads, auto-scale on demand and transparently optimize scientific workflows.},
booktitle = {Proceedings of the 14th ACM International Conference on Distributed and Event-Based Systems},
pages = {3–14},
numpages = {12},
keywords = {serverless, orchestration, event-based},
location = {Montreal, Quebec, Canada},
series = {DEBS '20}
}

@inproceedings{pywren,
author = {Jonas, Eric and Pu, Qifan and Venkataraman, Shivaram and Stoica, Ion and Recht, Benjamin},
title = {Occupy the Cloud: Distributed Computing for the 99%},
year = {2017},
isbn = {9781450350280},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3127479.3128601},
doi = {10.1145/3127479.3128601},
abstract = {Distributed computing remains inaccessible to a large number of users, in spite of
many open source platforms and extensive commercial offerings. While distributed computation
frameworks have moved beyond a simple map-reduce model, many users are still left
to struggle with complex cluster management and configuration tools, even for running
simple embarrassingly parallel jobs. We argue that stateless functions represent a
viable platform for these users, eliminating cluster management overhead, fulfilling
the promise of elasticity. Furthermore, using our prototype implementation, PyWren,
we show that this model is general enough to implement a number of distributed computing
models, such as BSP, efficiently. Extrapolating from recent trends in network bandwidth
and the advent of disaggregated storage, we suggest that stateless functions are a
natural fit for data processing in future computing environments.},
booktitle = {Proceedings of the 2017 Symposium on Cloud Computing},
pages = {445–451},
numpages = {7},
keywords = {distributed computing, AWS lambda, PyWren, serverless},
location = {Santa Clara, California},
series = {SoCC '17}
}

@inproceedings{kappa,
author = {Zhang, Wen and Fang, Vivian and Panda, Aurojit and Shenker, Scott},
title = {Kappa: A Programming Framework for Serverless Computing},
year = {2020},
isbn = {9781450381376},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3419111.3421277},
doi = {10.1145/3419111.3421277},
abstract = {Serverless computing has recently emerged as a new paradigm for running software on
the cloud. In this paradigm, programs need to be expressed as a set of short-lived
tasks, each of which can complete within a short bounded time (e.g., 15 minutes on
AWS Lambda). Serverless computing is beneficial to cloud providers---by allowing them
to better utilize resources---and to users---by simplifying management and enabling
greater elasticity. However, developing applications to run in this environment is
challenging, requiring users to appropriately partition their code, develop new coordination
mechanisms, and deal with failure recovery. In this paper, we propose Kappa, a framework
that simplifies serverless development. It uses checkpointing to handle lambda function
timeouts, and provides concurrency mechanisms that enable parallel computation and
coordination.},
booktitle = {Proceedings of the 11th ACM Symposium on Cloud Computing},
pages = {328–343},
numpages = {16},
keywords = {distributed computing, serverless},
location = {Virtual Event, USA},
series = {SoCC '20}
}


@inproceedings{shahrad-azure,
  title={Serverless in the wild: Characterizing and optimizing the serverless workload at a large cloud provider},
  author={Shahrad, Mohammad and Fonseca, Rodrigo and Goiri, {\'I}{\~n}igo and Chaudhry, Gohar and Batum, Paul and Cooke, Jason and Laureano, Eduardo and Tresness, Colby and Russinovich, Mark and Bianchini, Ricardo},
  booktitle={2020 $\{$USENIX$\}$ Annual Technical Conference ($\{$USENIX$\}$$\{$ATC$\}$ 20)},
  pages={205--218},
  year={2020}
}

@inproceedings{icpe-2020,
author = {Eismann, Simon and Grohmann, Johannes and van Eyk, Erwin and Herbst, Nikolas and Kounev, Samuel},
title = {Predicting the Costs of Serverless Workflows},
year = {2020},
isbn = {9781450369916},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3358960.3379133},
doi = {10.1145/3358960.3379133},
booktitle = {Proceedings of the ACM/SPEC International Conference on Performance Engineering},
pages = {265–276},
numpages = {12},
keywords = {performance, cost, workflows, serverless, prediction},
location = {Edmonton AB, Canada},
series = {ICPE '20}
}

@INPROCEEDINGS{ieee-fakhfakh,  author={Fakhfakh, Fairouz and Kacem, Hatem Hadj and Kacem, Ahmed Hadj},  booktitle={2014 IEEE 18th International Enterprise Distributed Object Computing Conference Workshops and Demonstrations},   title={Workflow Scheduling in Cloud Computing: A Survey},   year={2014},  volume={},  number={},  pages={372-378},  doi={10.1109/EDOCW.2014.61}}